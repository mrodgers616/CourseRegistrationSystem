
/**
 *
 * @author matthewrodgers
 */
import java.util.*;
public class adminManagement extends javax.swing.JFrame {
    
    Student student = new Student();
    private ArrayList<String> allNames = new ArrayList<String>();
    Admin admin = new Admin();
    
    
    public adminManagement() {
        initComponents();
        add.setVisible(false);
        courseInterface.setVisible(false);
        courseName.setVisible(false);
        courseID.setVisible(false);
        maxStudents.setVisible(false);
        currentStudents.setVisible(false);
        studentNames.setVisible(false);
        courseInstructor.setVisible(false);
        courseSection.setVisible(false);
        courseLocation.setVisible(false);
        i1.setVisible(false);
        i2.setVisible(false);
        i3.setVisible(false);
        i4.setVisible(false);
        i5.setVisible(false);
        i6.setVisible(false);
        i7.setVisible(false);
        i8.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        createCourse = new javax.swing.JButton();
        deleteCourse = new javax.swing.JButton();
        editCourse = new javax.swing.JButton();
        displayCourse = new javax.swing.JButton();
        registerStudent = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        managementTextArea = new javax.swing.JTextArea();
        courseName = new javax.swing.JTextField();
        courseID = new javax.swing.JTextField();
        maxStudents = new javax.swing.JTextField();
        currentStudents = new javax.swing.JTextField();
        studentNames = new javax.swing.JTextField();
        courseInstructor = new javax.swing.JTextField();
        courseSection = new javax.swing.JTextField();
        courseLocation = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        courseInterface = new javax.swing.JButton();
        i1 = new javax.swing.JLabel();
        i2 = new javax.swing.JLabel();
        i3 = new javax.swing.JLabel();
        i4 = new javax.swing.JLabel();
        i5 = new javax.swing.JLabel();
        i6 = new javax.swing.JLabel();
        i7 = new javax.swing.JLabel();
        i8 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(2, 17, 49));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 196, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 431, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel8.setText("Admin");

        jButton4.setText("Home");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 592, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(72, 72, 72))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(2, 17, 49));

        createCourse.setText("Create Course");
        createCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCourseActionPerformed(evt);
            }
        });

        deleteCourse.setText("Delete Course");
        deleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseActionPerformed(evt);
            }
        });

        editCourse.setText("Edit Course");
        editCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseActionPerformed(evt);
            }
        });

        displayCourse.setText("Display Course");
        displayCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseActionPerformed(evt);
            }
        });

        registerStudent.setText("Register Student");
        registerStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editCourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(displayCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(registerStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(createCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registerStudent)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(33, 49, 89));

        managementTextArea.setColumns(20);
        managementTextArea.setRows(5);
        jScrollPane1.setViewportView(managementTextArea);

        courseName.setText("Course Name");
        courseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseNameActionPerformed(evt);
            }
        });

        courseID.setText("Course ID");
        courseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseIDActionPerformed(evt);
            }
        });

        maxStudents.setText("Maximum Number of Students");
        maxStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxStudentsActionPerformed(evt);
            }
        });

        currentStudents.setText("Current Number of Students");
        currentStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentStudentsActionPerformed(evt);
            }
        });

        studentNames.setText("Student Names (Click add after each)");
        studentNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNamesActionPerformed(evt);
            }
        });

        courseInstructor.setText("Course Intructor");
        courseInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseInstructorActionPerformed(evt);
            }
        });

        courseSection.setText("Course Section");
        courseSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseSectionActionPerformed(evt);
            }
        });

        courseLocation.setText("Course Location");
        courseLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseLocationActionPerformed(evt);
            }
        });

        add.setText("add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        courseInterface.setText("Create Course!");
        courseInterface.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseInterfaceActionPerformed(evt);
            }
        });

        i1.setForeground(new java.awt.Color(255, 0, 0));
        i1.setText("Invalid Entry");

        i2.setForeground(new java.awt.Color(255, 0, 0));
        i2.setText("Invalid Entry");

        i3.setForeground(new java.awt.Color(255, 0, 0));
        i3.setText("Invalid Entry");

        i4.setForeground(new java.awt.Color(255, 0, 0));
        i4.setText("Invalid Entry");

        i5.setForeground(new java.awt.Color(255, 0, 0));
        i5.setText("Invalid Entry");

        i6.setForeground(new java.awt.Color(255, 0, 0));
        i6.setText("Invalid Entry");

        i7.setForeground(new java.awt.Color(255, 0, 0));
        i7.setText("Invalid Entry");

        i8.setForeground(new java.awt.Color(255, 0, 0));
        i8.setText("Invalid Entry");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(currentStudents, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(maxStudents, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addComponent(courseID, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(courseName, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(i1)
                                    .addComponent(i2)
                                    .addComponent(i3))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(i7)
                                .addComponent(courseSection, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(courseInstructor, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(courseLocation)
                                .addComponent(studentNames, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(i6)
                                .addComponent(i8))
                            .addComponent(i5))
                        .addGap(18, 18, 18)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(i4))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(courseInterface)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i1)
                    .addComponent(i5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i2)
                    .addComponent(i6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i3)
                    .addComponent(i7))
                .addGap(1, 1, 1)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(i4))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i8)))
                .addGap(7, 7, 7)
                .addComponent(courseInterface)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        adminHome home = new adminHome();
        home.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void courseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseNameActionPerformed
        
    }//GEN-LAST:event_courseNameActionPerformed

    private void courseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseIDActionPerformed

    private void maxStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxStudentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxStudentsActionPerformed

    private void currentStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentStudentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentStudentsActionPerformed

    private void studentNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNamesActionPerformed

    private void courseInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseInstructorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseInstructorActionPerformed

    private void courseSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseSectionActionPerformed

    private void courseLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseLocationActionPerformed
    
  
    
    
    
    
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String names = studentNames.getText();
        if(!names.equals("Student Names (Click add after each)") && !names.equals("")) {
            allNames.add(names);
            studentNames.setText("Student Names (Click add after each)");
            managementTextArea.append("Student Added! \n");
            i5.setVisible(false);
        }
        else {
            i5.setVisible(true);
        }
    }//GEN-LAST:event_addActionPerformed

    private void courseInterfaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseInterfaceActionPerformed
        String c1 = courseName.getText();
        String c2 = courseID.getText();
        String c3 = maxStudents.getText();
        String c4 = currentStudents.getText();
        String c6 = courseInstructor.getText();
        String c7 = courseSection.getText();
        String c8 = courseLocation.getText();
        String courseInterfaceText = courseInterface.getText();
        if(courseInterfaceText.equals("Create Course!")) {
            if(!c1.equals("") && !c1.equals("Course Name")) {
                i1.setVisible(false);
                if(!c2.equals("") && !c2.equals("Course ID")) {
                    i2.setVisible(false);
                    if(!c3.equals("") && !c3.equals("Maximum Number of Students")) {
                        i3.setVisible(false);
                        if(!c4.equals("") && !c4.equals("Current Number of Students")) {
                            i4.setVisible(false);
                            if(!c6.equals("") && !c6.equals("Course Intructor")) {
                                i6.setVisible(false);
                                if(!c7.equals("") && !c7.equals("Course Section")) {
                                    i7.setVisible(false);
                                    if(!c8.equals("") && !c8.equals("Course Location")) {
                                        CourseData myCourseData = new CourseData(c1, c2, c3, c4, null, c6, c7, c8);
                                        Admin.course_data.add(myCourseData);
                                        courseInterface.setVisible(false);
                                        courseName.setVisible(false);
                                        courseID.setVisible(false);
                                        maxStudents.setVisible(false);
                                        currentStudents.setVisible(false);
                                        studentNames.setVisible(false);
                                        courseInstructor.setVisible(false);
                                        courseSection.setVisible(false);
                                        courseLocation.setVisible(false);
                                        i1.setVisible(false);
                                        i2.setVisible(false);
                                        i3.setVisible(false);
                                        i4.setVisible(false);
                                        i5.setVisible(false);
                                        i6.setVisible(false);
                                        i7.setVisible(false);
                                        i8.setVisible(false);
                                        add.setVisible(false);
                                        managementTextArea.setText(null);
                                        managementTextArea.append("Course Successfully Added! \n");
                                        
                                    }
                                    else {
                                        i8.setVisible(true);
                                    }
                                }
                                else {
                                    i7.setVisible(true);
                                }
                            }
                            else {
                                i6.setVisible(true);
                            }
                        }
                        else {
                            i4.setVisible(true);
                        }
                    }
                    else {
                       i3.setVisible(true); 
                    }
                }
                else {
                    i2.setVisible(true);
                }
            }
            else {
                i1.setVisible(true);
            }
        }
        
        else if(courseInterfaceText.equals("Delete Course")) {
            for(int i = 0; i < Admin.course_data.size(); i++) {
                if(!c2.equals("") && !c2.equals("Course ID") && c2.equals(Admin.course_data.get(i).getCourseID()) ) {
                    i2.setVisible(false);
                    admin.deleteCourse(courseID);
                    managementTextArea.setText(null);
                    managementTextArea.append("Course Successfully Deleted! \n");
                    
                }
                else {
                }
            }
        }
       
        else if(courseInterfaceText.equals("Edit Course")) {
            managementTextArea.setText(null);
            for(int i = 0; i < Admin.course_data.size(); i++) {
                if(c2.equals(Admin.course_data.get(i).getCourseID()) ) {
                    i2.setVisible(false);
                    if(!c3.equals("") && !c3.equals("Maximum Number of Students")) {
                        i3.setVisible(false);
                        Admin.course_data.get(i).setMaxStudents(c3);
                        managementTextArea.append("Maximum number of students updated \n");
                    }
                    else if(c3.equals("Maximum Number of Students")) {
                        
                    }
                    else {
                        i3.setVisible(true);  
                    }
                    
                    if(!c6.equals("") && !c6.equals("Course Intructor")) {
                        i6.setVisible(false);
                        Admin.course_data.get(i).setCourseInstructor(c6);
                        managementTextArea.append("Course Instructor updated \n");
                    }
                    else if(c6.equals("Course Intructor")) {
                        
                    }
                    else {
                        i6.setVisible(true);  
                    }
                    if(!c7.equals("") && !c7.equals("Course Section")) {
                        i7.setVisible(false);
                        Admin.course_data.get(i).setCourseSection(c7);
                        managementTextArea.append("Course Section updated \n");
                    }
                    else if(c7.equals("Course Section")) {
                        
                    }
                    else {
                        i7.setVisible(true);  
                    }
                    if(!c8.equals("") && !c8.equals("Course Location")) {
                        i8.setVisible(false);
                        Admin.course_data.get(i).setCourseLocation(c8);
                        managementTextArea.append("Course Location updated \n");
                    }
                    else if(c8.equals("Course Location")) {
                        
                    }
                    else {
                        i8.setVisible(true);  
                    }
                    
                }
            }
        }
        
        else if(courseInterfaceText.equals("Display Course")) {
            for(int i = 0; i < Admin.course_data.size(); i++) {
                if(c2.equals(Admin.course_data.get(i).getCourseID()) ) {
                    managementTextArea.setText(null);
                    managementTextArea.append(Admin.course_data.get(i).getCourseName() + " | " );
                    managementTextArea.append(Admin.course_data.get(i).getCourseID() + " | ");
                    managementTextArea.append(Admin.course_data.get(i).getMaxStudents() + " | ");
                    managementTextArea.append(Admin.course_data.get(i).getCurrentStudents() + " | ");
                    managementTextArea.append(Admin.course_data.get(i).getStudentNames() + " | ");
                    managementTextArea.append(Admin.course_data.get(i).getCourseInstructor() + " | ");
                    managementTextArea.append(Admin.course_data.get(i).getCourseSection() + " | ");
                    managementTextArea.append(Admin.course_data.get(i).getCourseLocation() + "\n");
                }
            }
        }
        
        else if(courseInterfaceText.equals("Register Student")) {
            if(!allNames.isEmpty()) {
                admin.registerStudent(allNames);
                i5.setVisible(false);
                managementTextArea.append("Students Registered \n");
                
            }
            else {
                i5.setVisible(true);
            }
        }
    }//GEN-LAST:event_courseInterfaceActionPerformed

    private void createCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCourseActionPerformed
        courseInterface.setText("Create Course!");
        courseName.setText("Course Name");
        courseID.setText("Course ID");
        maxStudents.setText("Maximum Number of Students");
        currentStudents.setText("Current Number of Students");
        studentNames.setText("Student Names (Click add after each)");
        courseInstructor.setText("Course Intructor");
        courseSection.setText("Course Section");
        courseLocation.setText("Course Location");
        courseName.setVisible(true);
        courseID.setVisible(true);
        maxStudents.setVisible(true);
        currentStudents.setVisible(true);
        studentNames.setVisible(false);
        courseInstructor.setVisible(true);
        courseSection.setVisible(true);
        courseLocation.setVisible(true);
        courseInterface.setVisible(true);
        add.setVisible(false);
        i1.setVisible(false);
        i2.setVisible(false);
        i3.setVisible(false);
        i4.setVisible(false);
        i5.setVisible(false);
        i6.setVisible(false);
        i7.setVisible(false);
        i8.setVisible(false);
        
        

    }//GEN-LAST:event_createCourseActionPerformed

    private void deleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseActionPerformed
        courseInterface.setText("Delete Course");
        courseName.setText("Course Name");
        courseID.setText("Course ID");
        maxStudents.setText("Maximum Number of Students");
        currentStudents.setText("Current Number of Students");
        studentNames.setText("Student Names (Click add after each)");
        courseInstructor.setText("Course Intructor");
        courseSection.setText("Course Section");
        courseLocation.setText("Course Location");
        i1.setVisible(false);
        i2.setVisible(false);
        i3.setVisible(false);
        i4.setVisible(false);
        i5.setVisible(false);
        i6.setVisible(false);
        i7.setVisible(false);
        i8.setVisible(false);
        add.setVisible(false);
        courseInterface.setVisible(true);
        courseName.setVisible(false);
        courseID.setVisible(true);
        maxStudents.setVisible(false);
        currentStudents.setVisible(false);
        studentNames.setVisible(false);
        courseInstructor.setVisible(false);
        courseSection.setVisible(false);
        courseLocation.setVisible(false);
        
        
        
    }//GEN-LAST:event_deleteCourseActionPerformed

    private void editCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCourseActionPerformed
        courseInterface.setText("Edit Course");
        courseName.setText("Course Name");
        courseID.setText("Course ID");
        maxStudents.setText("Maximum Number of Students");
        currentStudents.setText("Current Number of Students");
        studentNames.setText("Student Names (Click add after each)");
        courseInstructor.setText("Course Intructor");
        courseSection.setText("Course Section");
        courseLocation.setText("Course Location");
        i1.setVisible(false);
        i2.setVisible(false);
        i3.setVisible(false);
        i4.setVisible(false);
        i5.setVisible(false);
        i6.setVisible(false);
        i7.setVisible(false);
        i8.setVisible(false);
        add.setVisible(false);
        courseInterface.setVisible(true);
        courseName.setVisible(false);
        courseID.setVisible(true);
        maxStudents.setVisible(true);
        currentStudents.setVisible(false);
        studentNames.setVisible(false);
        courseInstructor.setVisible(true);
        courseSection.setVisible(true);
        courseLocation.setVisible(true);
    }//GEN-LAST:event_editCourseActionPerformed

    private void displayCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseActionPerformed
        courseInterface.setText("Display Course");
        courseName.setText("Course Name");
        courseID.setText("Course ID");
        maxStudents.setText("Maximum Number of Students");
        currentStudents.setText("Current Number of Students");
        studentNames.setText("Student Names (Click add after each)");
        courseInstructor.setText("Course Intructor");
        courseSection.setText("Course Section");
        courseLocation.setText("Course Location");
        i1.setVisible(false);
        i2.setVisible(false);
        i3.setVisible(false);
        i4.setVisible(false);
        i5.setVisible(false);
        i6.setVisible(false);
        i7.setVisible(false);
        i8.setVisible(false);
        add.setVisible(false);
        courseInterface.setVisible(true);
        courseName.setVisible(false);
        courseID.setVisible(true);
        maxStudents.setVisible(false);
        currentStudents.setVisible(false);
        studentNames.setVisible(false);
        courseInstructor.setVisible(false);
        courseSection.setVisible(false);
        courseLocation.setVisible(false);
        for(int i =0; i < Admin.course_data.size(); i++) {
            managementTextArea.append(Admin.course_data.get(i).getCourseName() + " | " );
            managementTextArea.append(Admin.course_data.get(i).getCourseID() + " | \n");
        }
        
    }//GEN-LAST:event_displayCourseActionPerformed
    
    private void registerStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerStudentActionPerformed
        courseInterface.setText("Register Student");
        courseName.setText("Course Name");
        courseID.setText("Course ID");
        maxStudents.setText("Maximum Number of Students");
        currentStudents.setText("Current Number of Students");
        studentNames.setText("Student Names (Click add after each)");
        courseInstructor.setText("Course Intructor");
        courseSection.setText("Course Section");
        courseLocation.setText("Course Location");
        i1.setVisible(false);
        i2.setVisible(false);
        i3.setVisible(false);
        i4.setVisible(false);
        i5.setVisible(false);
        i6.setVisible(false);
        i7.setVisible(false);
        i8.setVisible(false);
        add.setVisible(true);
        courseInterface.setVisible(true);
        courseName.setVisible(false);
        courseID.setVisible(false);
        maxStudents.setVisible(false);
        currentStudents.setVisible(false);
        studentNames.setVisible(true);
        courseInstructor.setVisible(false);
        courseSection.setVisible(false);
        courseLocation.setVisible(false);
    }//GEN-LAST:event_registerStudentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField courseID;
    private javax.swing.JTextField courseInstructor;
    private javax.swing.JButton courseInterface;
    private javax.swing.JTextField courseLocation;
    private javax.swing.JTextField courseName;
    private javax.swing.JTextField courseSection;
    private javax.swing.JButton createCourse;
    private javax.swing.JTextField currentStudents;
    private javax.swing.JButton deleteCourse;
    private javax.swing.JButton displayCourse;
    private javax.swing.JButton editCourse;
    private javax.swing.JLabel i1;
    private javax.swing.JLabel i2;
    private javax.swing.JLabel i3;
    private javax.swing.JLabel i4;
    private javax.swing.JLabel i5;
    private javax.swing.JLabel i6;
    private javax.swing.JLabel i7;
    private javax.swing.JLabel i8;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea managementTextArea;
    private javax.swing.JTextField maxStudents;
    private javax.swing.JButton registerStudent;
    private javax.swing.JTextField studentNames;
    // End of variables declaration//GEN-END:variables
}
